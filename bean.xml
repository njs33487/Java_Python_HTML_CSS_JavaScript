<!-- This XML file defines service beans and is named 'services.xml' -->
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- services -->
    <bean id="accountServ" class="com.revature.services.AccountServiceImpl">
        <property name="accountDao" ref="accountDao"/>
        <!-- additional collaborators and configuration for this bean go here -->
    </bean>

    <bean id="orderServ" class="com.revature.services.OrderServiceImpl">
        <property name="orderDao" ref="orderDao"/>
        <!-- additional collaborators and configuration for this bean go here -->
    </bean>

    <bean id="itemServ" class="com.revature.services.ItemServiceImpl">
        <property name="itemDao" ref="itemDao"/>
        <!-- additional collaborators and configuration for this bean go here -->
    </bean>

    <!-- more bean definitions for services go here -->

</beans>
<!-- This XML file defines DAO beans and is named 'daos.xml' -->
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="accountDao" class="com.revature.dao.AccountDaoImpl">
        <!-- additional collaborators and configuration for this bean go here -->
    </bean>

    <bean id="orderDao" class="com.revature.dao.OrderDaoImpl">
        <!-- additional collaborators and configuration for this bean go here -->
    </bean>

    <bean id="itemDao" class="com.revature.dao.ItemDaoImpl">
        <!-- additional collaborators and configuration for this bean go here -->
    </bean>

    <!-- more bean definitions for data access objects go here -->

</beans>

<!-- // Single XML Path File -->
ApplicationContext context = new ClassPathXmlApplicationContext(new String ("services.xml"));
<!-- // Multiple XML Path Files -->
ApplicationContext context = new ClassPathXmlApplicationContext(new String[] {"services.xml", "daos.xml"});

<!-- Annotation Configuration -->
<!-- Annotation configuration, introduced as of Spring 2.5, serves as an alternative to XML-based setups, 
and rely on the use of annotations and bytecode metadata to wire 
components as opposed to the used of angle-bracket element declarations. 
Utilization of annotation based configuration still requires the use of an ApplicationContext XML file; however, 
the bean configurations are separated from this XML file into the component class files themselves and are defined using relevant annotations on the class, method or field declaration. -->
<!-- To use annotation configuration the context tag will be required within the ApplicationContext configuration file. This element enables the use of annotations which is, by default, turned off. Additionally, you will need to include the xml namespace "context". For Example: -->

<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"

    <!-- The context namespace (below) is required for context element -->
    xmlns:context="http://www.springframework.org/schema/context"

    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- The following enables use of annotation-based configurations to be detected within your class files -->
    <context:annotation-config/>

    <!-- Bean definitions -->
   <bean id = "account" class = "com.revature.models.Account">
   </bean>
   <bean id = "order" class = "com.revature.models.Order">
   </bean>
   <bean id = "item" class = "com.revature.models.Item">
   </bean>

</beans>